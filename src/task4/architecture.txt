
    System                    Remote service
     ___            Task            ___
    |   | ----------------------=> |   |
    |   |                          |   |
    |   |         Response         |   |
    |___| <=---------------------- |___|

 Простая архитектура заключается в том что:
  1. Команды генерируемые задачи на стороне системы паблишет результат в Брокер Сообщений, после чего
    консюмер(ы) разгребая очереди отправляет на удаленный сервис
  2. Получающая сторона системы начинает обработку ответов с того что паблишет их в Брокер Сообщей и после
    чего консюмер(ы) рагребает сообщения сохраняя в базу.
  3. В зависимости от структуры ответа мы определяем какую базу будет лучше использовать для данных целей
  * также во всю эту систему можно подключить Redis для хранения данных Брокера Сообщений

 - Основной стек технлогий: Supervisor, Nginx, Php, NoSQL(SQL) database, RabbitMQ(Kafka),
    возможно Redis как промежуточная база данных для Брокера Сообщений

 - Apache Kafka более производительный по сравнению с RabbitMQ.

 - Можно заменить Apache Kafka на RabbitMQ

 - По поводу плюсов и минусов Kafka сложно сказать не работав с ней, а явных упоминаний в статьх о кричащих
    проблемах, я не нашел